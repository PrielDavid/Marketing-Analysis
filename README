# Marketing Analysis & Power BI 📈

> **End‑to‑end analytics & interactive dashboards for the Marketing team.**

[![Made with Power BI](https://img.shields.io/badge/Power_BI-%23F2C811?logo=powerbi\&logoColor=white)](https://powerbi.microsoft.com/) 
[![Python 3.11](https://img.shields.io/badge/Python-3.11-blue?logo=python)](https://www.python.org/) 
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](LICENSE)

---

## 📚 Table of Contents

1. [Project Overview](#project-overview)
2. [Folder Structure](#folder-structure)
3. [Quick Start](#quick-start)
4. [Business Questions](#business-questions)
5. [Dashboards & Reports](#dashboards--reports)
6. [Tech Stack](#tech-stack)
7. [Contributing](#contributing)
8. [License](#license)

---

## Project Overview

This repository hosts a **reproducible data pipeline** (Python + SQLite) and **Power BI visuals** that answer six core marketing questions about customers, products, and revenue trends. All charts and tables are built directly from the source CSVs—no manual Excel wrangling required.

*⬇️ Skip to the [Quick Start](#quick-start) if you just want to run the project.*

---

## Folder Structure

```text
Marketing Analysis/
├── .venv/                       # Local Python virtual‑environment (untracked)
├── data/                        # Raw input files
│   └── Sales Transaction v4a.csv
├── exports/                     # Cleaned & model‑ready data generated by Code.py
│   ├── country_monthly_revenue.csv
│   ├── customer_segments.csv
│   ├── daily_revenue_forecast.csv
│   └── product_revenue.csv
├── figures/                     # Auto‑generated PNGs for the README / wiki
├── Code.py                      # ETL + Prophet forecasting script
├── sales_dashboard.pbix         # Power BI report (open with Power BI Desktop)
├── sales.db                     # Local SQLite DB (created by Code.py)
└── README.md                    # You‑are‑here 🙃
```

---

## Quick Start

> **⏱️ Total setup time: \~5 minutes**

1. **Clone** the repo & create a virtual‑environment:

   ```bash
   git clone https://github.com/PrielDavid/Marketing‑Analysis.git
   cd marketing‑analysis
   python -m venv .venv && source .venv/bin/activate   # Windows: .venv\Scripts\activate
   ```
2. **Install** dependencies:

   ```bash
   pip install -r requirements.txt
   ```
3. **Run** the pipeline & generate fresh exports + figures:

   ```bash
   python Code.py
   ```
4. **Open** `sales_dashboard.pbix` in Power BI Desktop → hit *Refresh* and explore! ✅

---

## Business Questions

The project answers (and visualises) these questions:

| # | Question                                                 | Technique                             |
| - | -------------------------------------------------------- | ------------------------------------- |
| 1 | What are our customer segments and how do they behave?   | RFM + K‑means                         |
| 2 | Which products generate the most revenue and margin?     | Pareto & cohort analyses              |
| 3 | How does revenue trend by country over time?             | Time‑series decomposition             |
| 4 | What is the daily revenue forecast for the next 90 days? | Prophet forecast & uncertainty ribbon |
| 5 | Which marketing campaign drives the highest AOV?         | SQL + DAX comparison                  |
| 6 | What KPIs should leadership track weekly?                | Live dashboard tiles                  |

---

## Dashboards & Reports

<div align="center">
  <img src="figures/overview_dashboard.png" width="700" alt="Power BI dashboard screenshot" />
</div>

*Open the `.pbix` file for an interactive version.*

---

## Tech Stack

* **Python 3.11** · pandas · Prophet · SQLite
* **Power BI Desktop** (DAX, Power Query M)
* **VS Code** + *Dev Containers* for reproducible dev‑environments
* **GitHub Actions** (optional) for automated data refresh & artifact upload

---

## Contributing

Pull requests are welcome! Please open an issue first to discuss major changes.

1. Fork the repo → create a feature branch.
2. Commit with clear messages (`feat:`, `fix:`, `docs:` …).
3. Ensure `python Code.py` runs without errors and that dashboards load.
4. Open a PR—CI checks will run automatically.

---

## License

[MIT](LICENSE) © 2025 Marketing Analytics Team
